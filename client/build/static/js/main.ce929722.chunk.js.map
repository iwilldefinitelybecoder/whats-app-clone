{"version":3,"sources":["components/loader/Loader.jsx","context/AccountProvider.jsx","context/UserProvider.jsx","App.js","reportWebVitals.js","index.js"],"names":["Loader","_jsx","_Fragment","children","_jsxs","className","class","src","alt","AccountContext","createContext","AccountProvider","_ref","_useState","useState","_useState2","_slicedToArray","account","setAccount","_useState3","_useState4","showloginButton","setShowloginButton","_useState5","_useState6","showlogoutButton","setShowlogoutButton","_useState7","_useState8","activeUsers","setActiveUsers","_useState9","_useState10","newMessageFlag","setNewMessageFlag","socket","useRef","useEffect","current","io","Provider","value","UserContext","UserProvider","person","setPerson","Messenger","lazy","App","isLoading","setIsLoading","setTimeout","GoogleOAuthProvider","clientId","Suspense","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"iGACA,iBAsBeA,IAlBA,WACX,OACIC,cAAAC,WAAA,CAAAC,SACAC,eAAA,OAAKC,UAAU,cAAaF,SAAA,CAC5BF,cAAA,OAAKK,MAAM,UAASH,SACfF,cAAA,QAAAE,SAAM,gBAGXF,cAAA,OAAAE,SACDF,cAAA,OAAKM,IAAI,+HAA+HC,IAAI,c,mGCXtIC,EAAiBC,wBAAc,MAqC7BC,IAnCS,SAAHC,GAAoB,IAAfT,EAAQS,EAART,SAEtBU,EAAgCC,qBAAUC,EAAAC,YAAAH,EAAA,GAAlCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC3BI,EAA8CL,oBAAS,GAAKM,EAAAJ,YAAAG,EAAA,GAArDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,EAAgDT,oBAAS,GAAMU,EAAAR,YAAAO,EAAA,GAAxDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAE5CG,EAAsCb,mBAAS,IAAGc,EAAAZ,YAAAW,EAAA,GAA3CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAElCG,EAA4CjB,oBAAS,GAAMkB,EAAAhB,YAAAe,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAElCG,EAASC,mBAMf,OAJAC,qBAAU,WACNF,EAAOG,QAAUC,YAAG,yBACrB,IAGCtC,cAACQ,EAAe+B,SAAQ,CAACC,MAAO,CAC5BxB,UACAC,aACAG,kBACAC,qBACAG,mBACAC,sBACAS,SACAN,cACAC,iBACAG,iBACAC,qBACF/B,SACGA,M,2FCjCAuC,EAAchC,wBAAc,MAa1BiC,IAXM,SAAH/B,GAAoB,IAAfT,EAAQS,EAART,SAEnBU,EAA8BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAlC+B,EAAM7B,EAAA,GAAE8B,EAAS9B,EAAA,GAEzB,OACId,cAACyC,EAAYF,SAAQ,CAACC,MAAO,CAAEG,SAAQC,aAAY1C,SAC9CA,M,4KCCP2C,EAAYC,gBAAK,kBAAM,uDAkCdC,MAhCf,WACE,IAAAnC,EAAkCC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAAzCoC,EAASlC,EAAA,GAAEmC,EAAYnC,EAAA,GAc9B,OATAsB,qBAAU,WAIRc,YAAW,WACTD,GAAa,KAHD,KAKb,IAGDjD,cAACmD,IAAmB,CAACC,SAbN,2EAayBlD,SACtCF,cAAC0C,IAAY,CAAAxC,SACXF,cAACU,IAAe,CAAAR,SACdF,cAACqD,WAAQ,CAACC,SAAUtD,cAACD,IAAM,IAAIG,SAC5B8C,EACChD,cAACD,IAAM,IAEPC,cAAC6C,EAAS,aCxBTU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,SAAA/C,GAAkD,IAA/CgD,EAAMhD,EAANgD,OAAQC,EAAMjD,EAANiD,OAAQC,EAAMlD,EAANkD,OAAQC,EAAMnD,EAANmD,OAAQC,EAAOpD,EAAPoD,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACPjE,cAACkE,IAAMC,WAAU,CAAAjE,SACfF,cAAC+C,EAAG,MAENqB,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.ce929722.chunk.js","sourcesContent":["\nimport { CircularProgress } from \"@mui/material\"\nimport './loader.css'\n\n\nconst Loader = () => {\n    return (\n        <>\n        <div className=\"text-center\">\n        <div class=\"loading\">\n             <span>ChatPulse</span>\n             \n        </div>\n        <div>\n       <img src=\"C:/Users/tonys/OneDrive/Desktop/MERN-Stack-Projects-master/Whatsapp-Clone/client/src/components/loader/electrocardiogram.png\" alt=\"\" />\n\n        </div>\n\n         </div>\n        </>\n    )\n}\n\nexport default Loader;","import { createContext, useState, useEffect, useRef } from 'react';\nimport { io } from 'socket.io-client';\n\nexport const AccountContext = createContext(null);\n\nconst AccountProvider = ({children}) => {\n\n    const [ account, setAccount ] = useState();\n    const [showloginButton, setShowloginButton] = useState(true);\n    const [showlogoutButton, setShowlogoutButton] = useState(false);\n\n    const [activeUsers, setActiveUsers] = useState([]); \n    \n    const [newMessageFlag, setNewMessageFlag] = useState(false);\n\n    const socket = useRef();\n \n    useEffect(() => {\n        socket.current = io('ws://localhost:9000');\n    }, [])\n    \n    return (\n        <AccountContext.Provider value={{ \n            account, \n            setAccount, \n            showloginButton,\n            setShowloginButton,\n            showlogoutButton,\n            setShowlogoutButton,\n            socket,\n            activeUsers,\n            setActiveUsers,\n            newMessageFlag,\n            setNewMessageFlag\n        }}>\n            {children}\n        </AccountContext.Provider>\n    )\n}\n\nexport default AccountProvider;","import { createContext, useState } from 'react';\n\nexport const UserContext = createContext(null);\n\nconst UserProvider = ({children}) => {\n\n    const [ person, setPerson ] = useState({});\n    \n    return (\n        <UserContext.Provider value={{ person, setPerson }}>\n            {children}\n        </UserContext.Provider>\n    )\n}\n\nexport default UserProvider;","import { GoogleOAuthProvider } from '@react-oauth/google';\nimport { useState, useEffect, lazy, Suspense } from 'react';\n\n//components\nimport UserProvider from './context/UserProvider';\nimport AccountProvider from './context/AccountProvider';\n\nimport Loader from './components/loader/Loader';\n\n\n\nconst Messenger = lazy(() => import('./components/Messenger'));\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const clientId = '246648691460-bsj1rub53iami1btvii0577h1on2je01.apps.googleusercontent.com';\n\n\n  useEffect(() => {\n    // Simulate a delay of 2 seconds\n    const delay = 0;\n\n    setTimeout(() => {\n      setIsLoading(false);\n    }, delay);\n  }, []);\n\n  return (\n    <GoogleOAuthProvider clientId={clientId}> \n      <UserProvider>\n        <AccountProvider>\n          <Suspense fallback={<Loader />}>\n            {isLoading ? (\n              <Loader /> // Display loader during the delay\n            ) : (\n              <Messenger /> // Render the Messenger component after the delay\n            )}\n          </Suspense>\n        </AccountProvider>\n      </UserProvider>\n    </GoogleOAuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n \nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}